


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Runs on LM3S1968
    3 00000000         ; EE319K lab 6 device driver for the LCD
    4 00000000         ; Anish Vaghasia & Phillip Lemons
    5 00000000         ; March 2, 2013 (Spring 2013 version)
    6 00000000         ;
    7 00000000         ;  size is 1*16
    8 00000000         ;  because we do not need to read busy, then we will tie
                        R/W=ground
    9 00000000         ;  10k potentiometer (not the slide pot for Lab 8)
   10 00000000         ;      one end of pot is +5V, 
   11 00000000         ;      center of pot to pin 3 of LCD,
   12 00000000         ;      other end of pot is ground
   13 00000000         ;  ground = pin 1    Vss
   14 00000000         ;  power  = pin 2    Vdd   +5V (EE319K LCDs)
   15 00000000         ;  pot    = pin 3    Vlc   connected to center of pot
   16 00000000         ;  PF4    = pin 4    RS    (1 for data, 0 for control/st
                       atus)
   17 00000000         ;  ground = pin 5    R/W   (1 for read, 0 for write)
   18 00000000         ;  PF5    = pin 6    E     (enable)
   19 00000000         ;  PF0    = pin 11   DB4   (4-bit data)
   20 00000000         ;  PF1    = pin 12   DB5
   21 00000000         ;  PF2    = pin 13   DB6
   22 00000000         ;  PF3    = pin 14   DB7
   23 00000000         ;16 characters are configured as 2 rows of 8
   24 00000000         ;addr  00 01 02 03 04 05 06 07 40 41 42 43 44 45 46 47
   25 00000000         
   26 00000000         
   27 00000000                 EXPORT           LCD_Open
   28 00000000                 EXPORT           LCD_Clear
   29 00000000                 EXPORT           LCD_OutChar
   30 00000000                 EXPORT           LCD_GoTo
   31 00000000                 EXPORT           LCD_OutString
   32 00000000                 EXPORT           LCD_OutChar
   33 00000000                 EXPORT           LCD_OutDec
   34 00000000                 EXPORT           LCD_OutFix
   35 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   36 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   37 00000000         
   38 00000000 40025080 
                       E       EQU              0x40025080
   39 00000000 40025040 
                       RS      EQU              0x40025040
   40 00000000 4002503C 
                       DATA    EQU              GPIO_PORTF_DATA_R + 60
   41 00000000 40025000 
                       GPIO_PORTF_DATA_R
                               EQU              0x40025000
   42 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   43 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420



ARM Macro Assembler    Page 2 


   44 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   45 00000000         
   46 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   47 00000000                 THUMB
   48 00000000                 ALIGN
   49 00000000         
   50 00000000         
   51 00000000         ;--------------- outCsrNibble ------------------
   52 00000000         ; Sends 4 bits to the LCD control/status
   53 00000000         ; Input: R0 is 4-bit command, in bit positions 3,2,1,0 o
                       f R0
   54 00000000         ; Output: none
   55 00000000         ; This is a private function
   56 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   57 00000000         outCsrNibble
   58 00000000 B500            PUSH             {LR}
   59 00000002 E92D 1FFE       PUSH             {R1-R12}
   60 00000006         ;set E and RS to 0
   61 00000006 49C3            LDR              R1, =RS
   62 00000008 F04F 0200       MOV              R2, #0
   63 0000000C 700A            STRB             R2, [R1]
   64 0000000E 49C2            LDR              R1, =E
   65 00000010 600A            STR              R2, [R1]
   66 00000012         
   67 00000012         ;Send data
   68 00000012 4BC2            LDR              R3, =DATA
   69 00000014 7018            STRB             R0, [R3]
   70 00000016         ;delay 6 us
   71 00000016 F000 F80B       BL               Delay_6us
   72 0000001A         ;set E to 1
   73 0000001A F04F 0620       MOV              R6, #0x20
   74 0000001E 700E            STRB             R6, [R1]
   75 00000020         ;delay 6 Us
   76 00000020 F000 F806       BL               Delay_6us
   77 00000024         ;set E to 0
   78 00000024 700A            STRB             R2, [R1]
   79 00000026         ;delay 6 ns
   80 00000026 F000 F803       BL               Delay_6us
   81 0000002A         
   82 0000002A E8BD 1FFE       POP              {R1-R12}
   83 0000002E BD00            POP              {PC}
   84 00000030         
   85 00000030         ;-----------Delay_6 us-----------------
   86 00000030         ;Delay function spends 6 us doing "nothing"
   87 00000030         ;Input: None
   88 00000030         ;Output: spends 6 us of time
   89 00000030         ;Modifies: R0
   90 00000030 B401    Delay_6us
                               PUSH             {R0}
   91 00000032 F04F 004B       MOV              R0,#75
   92 00000036 1E40    wait4   SUBS             R0,R0,#0x01
   93 00000038 D1FD            BNE              wait4
   94 0000003A BC01            POP{R0}
   95 0000003C 4770            BX               LR
   96 0000003E         



ARM Macro Assembler    Page 3 


   97 0000003E         ;---------------------outCsr---------------------
   98 0000003E         ; Sends one command code to the LCD control/status
   99 0000003E         ; Input: R0 is 8-bit command to execute
  100 0000003E         ; Output: none
  101 0000003E         ;* Entry Mode Set 0,0,0,0,0,1,I/D,S
  102 0000003E         ;*     I/D=1 for increment cursor move direction
  103 0000003E         ;*        =0 for decrement cursor move direction
  104 0000003E         ;*     S  =1 for display shift
  105 0000003E         ;*        =0 for no display shift
  106 0000003E         ;*   Display On/Off Control 0,0,0,0,1,D,C,B
  107 0000003E         ;*     D  =1 for display on
  108 0000003E         ;*        =0 for display off
  109 0000003E         ;*     C  =1 for cursor on
  110 0000003E         ;*        =0 for cursor off
  111 0000003E         ;*     B  =1 for blink of cursor position character
  112 0000003E         ;*        =0 for no blink
  113 0000003E         ;*   Cursor/Display Shift  0,0,0,1,S/C,R/L,*,*
  114 0000003E         ;*     S/C=1 for display shift
  115 0000003E         ;*        =0 for cursor movement
  116 0000003E         ;*     R/L=1 for shift to left
  117 0000003E         ;*        =0 for shift to right
  118 0000003E         ;*   Function Set   0,0,1,DL,N,F,*,*
  119 0000003E         ;*     DL=1 for 8 bit
  120 0000003E         ;*       =0 for 4 bit
  121 0000003E         ;*     N =1 for 2 lines
  122 0000003E         ;*       =0 for 1 line
  123 0000003E         ;*     F =1 for 5 by 10 dots
  124 0000003E         ;*       =0 for 5 by 7 dots 
  125 0000003E         ; This is a private function
  126 0000003E         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  127 0000003E         outCsr
  128 0000003E B500            PUSH             {LR}
  129 00000040 E92D 1FFE       PUSH             {R1-R12}
  130 00000044 4605            MOV              R5, R0      ;R5 = input
  131 00000046 EA4F 1010       LSR              R0, #4      ;isolate most sig n
                                                            ibble
  132 0000004A         ;outCsrNibble(MS_nibble)
  133 0000004A F7FF FFD9       BL               outCsrNibble
  134 0000004E 4628            MOV              R0, R5      ;reset r0 to input
  135 00000050 F020 00F0       BIC              R0, #0xF0   ;isolate least sig 
                                                            nibble
  136 00000054         ;outCsrNibble(LS_nibble)
  137 00000054 F7FF FFD4       BL               outCsrNibble
  138 00000058         ;delay
  139 00000058 F000 F839       BL               Delay_90uS
  140 0000005C E8BD 1FFE       POP              {R1-R12}
  141 00000060 BD00            POP              {PC}
  142 00000062         
  143 00000062         ;---------------------LCD_Open---------------------
  144 00000062         ; initialize the LCD display, called once at beginning
  145 00000062         ; Input: none
  146 00000062         ; Output: none
  147 00000062         ; This is a public function
  148 00000062         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  149 00000062         LCD_Open
  150 00000062 B500            PUSH             {LR}
  151 00000064 E92D 1FFF       PUSH             {R0-R12}



ARM Macro Assembler    Page 4 


  152 00000068         ;delay 30 ms
  153 00000068 F04F 0314       MOV              R3, #20
  154 0000006C F000 F840       BL               Delay_TIME
  155 00000070         ;initialize Port F
  156 00000070 F000 F935       BL               PortF_Init
  157 00000074         ;outCsrNibble(0x003)
  158 00000074 F04F 0003       MOV              R0, #0x03
  159 00000078 F7FF FFC2       BL               outCsrNibble
  160 0000007C         ;delay 5 ms
  161 0000007C F04F 0305       MOV              R3, #5
  162 00000080 F000 F836       BL               Delay_TIME
  163 00000084         ;outCsrNibble(0x003)
  164 00000084 F04F 0003       MOV              R0, #0x03
  165 00000088 F7FF FFBA       BL               outCsrNibble
  166 0000008C F000 F826       BL               Delay_100uS
  167 00000090         ;outCsrNibble(0x003)
  168 00000090 F04F 0003       MOV              R0, #0x03
  169 00000094 F7FF FFB4       BL               outCsrNibble
  170 00000098 F000 F820       BL               Delay_100uS
  171 0000009C         ;outCsrNibble(0x002)
  172 0000009C F04F 0002       MOV              R0, #0x02
  173 000000A0 F7FF FFAE       BL               outCsrNibble
  174 000000A4 F000 F81A       BL               Delay_100uS
  175 000000A8         
  176 000000A8         ;outCsr(0x28)
  177 000000A8 F04F 0028       MOV              R0, #0x28
  178 000000AC F7FF FFC7       BL               outCsr
  179 000000B0         ;outCsr(0x14)
  180 000000B0 F04F 0014       MOV              R0, #0x14
  181 000000B4 F7FF FFC3       BL               outCsr
  182 000000B8         ;outCsr(0x06)
  183 000000B8 F04F 0006       MOV              R0, #0x06
  184 000000BC F7FF FFBF       BL               outCsr
  185 000000C0         ;outCsr(0x0C)
  186 000000C0 F04F 000C       MOV              R0, #0x0C
  187 000000C4 F7FF FFBB       BL               outCsr
  188 000000C8         
  189 000000C8         ;BL LCD_Clear
  190 000000C8 E8BD 1FFF       POP              {R0-R12}
  191 000000CC BD00            POP              {PC}
  192 000000CE         
  193 000000CE         
  194 000000CE         
  195 000000CE         ;-----------Delay_90uS-----------------
  196 000000CE         ;Delay function spends 90 us doing "nothing"
  197 000000CE         ;Input: None
  198 000000CE         ;Output: spends 90 us of time
  199 000000CE         ;Modifies: R0
  200 000000CE B401    Delay_90uS
                               PUSH             {R0}
  201 000000D0 F240 4067       MOV              R0,#1127
  202 000000D4 1E40    wait3   SUBS             R0,R0,#0x01
  203 000000D6 D1FD            BNE              wait3
  204 000000D8 BC01            POP              {R0}
  205 000000DA 4770            BX               LR
  206 000000DC         
  207 000000DC         
  208 000000DC         
  209 000000DC         ;-----------Delay_100uS-----------------



ARM Macro Assembler    Page 5 


  210 000000DC         ;Delay function spends 100 us doing "nothing"
  211 000000DC         ;Input: None
  212 000000DC         ;Output: spends 100 us of time
  213 000000DC         ;Modifies: R0
  214 000000DC F240 40E2 
                       Delay_100uS
                               MOV              R0,#1250
  215 000000E0 1E40    wait2   SUBS             R0,R0,#0x01
  216 000000E2 D1FD            BNE              wait2
  217 000000E4 4770            BX               LR
  218 000000E6         
  219 000000E6         
  220 000000E6         
  221 000000E6         ;-----------Delay-----------------
  222 000000E6         ;Delay function spends 1ms doing "nothing"
  223 000000E6         ;Input: None
  224 000000E6         ;Output: spends 1ms of time
  225 000000E6         ;Modifies: R0
  226 000000E6 F243 00D4 
                       Delay   MOV              R0,#12500
  227 000000EA 1E40    wait    SUBS             R0,R0,#0x01
  228 000000EC D1FD            BNE              wait
  229 000000EE 4770            BX               LR
  230 000000F0         
  231 000000F0         
  232 000000F0         
  233 000000F0         ;------------Delay_TIME------------
  234 000000F0         ;DelaY function spends Time in ms dettermined by R0 usin
                       g busy delay (assumes 50Mhz)
  235 000000F0         ;Input: R3(R3 contains wait time)
  236 000000F0         ;Output: None
  237 000000F0         ;Modifies: R0, R1, R2
  238 000000F0 B407    Delay_TIME
                               PUSH             {R0-R2}
  239 000000F2 4619            MOV              R1,R3
  240 000000F4         ;ADD R2, LR, #0
  241 000000F4 B500            PUSH             {LR}
  242 000000F6 F7FF FFF6 
                       loop_d  BL               Delay
  243 000000FA 1E49            SUBS             R1,R1,#0x01
  244 000000FC D1FB            BNE              loop_d
  245 000000FE         ;ADD LR, R2, #0
  246 000000FE F85D EB04       POP              {LR}
  247 00000102 BC07            POP              {R0-R2}
  248 00000104 4770            BX               LR
  249 00000106         
  250 00000106         
  251 00000106         
  252 00000106         ;---------------------LCD_OutChar---------------------
  253 00000106         ; sends one ASCII to the LCD display
  254 00000106         ; Input: R0 (call by value) letter is 8-bit ASCII code
  255 00000106         ; Outputs: none
  256 00000106         ; This is a public function
  257 00000106         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  258 00000106         LCD_OutChar
  259 00000106 B500            PUSH             {LR}
  260 00000108 E92D 1FFE       PUSH             {R1-R12}
  261 0000010C         ;set E and RS to 0



ARM Macro Assembler    Page 6 


  262 0000010C 4981            LDR              R1, =RS
  263 0000010E F04F 0210       MOV              R2, #0x10
  264 00000112 700A            STRB             R2, [R1]
  265 00000114 4980            LDR              R1, =E
  266 00000116 F04F 0300       MOV              R3, #0
  267 0000011A 700B            STRB             R3, [R1]
  268 0000011C         
  269 0000011C         ;OUT 4 most sig bits
  270 0000011C 4B7F            LDR              R3, =DATA
  271 0000011E 4601            MOV              R1, R0
  272 00000120 EA4F 1111       LSR              R1, #4
  273 00000124 7019            STRB             R1, [R3]
  274 00000126         ;delay 6 us
  275 00000126 F7FF FF83       BL               Delay_6us
  276 0000012A         ;Enable E to 1
  277 0000012A 497B            LDR              R1, =E
  278 0000012C F04F 0620       MOV              R6, #0x20
  279 00000130 700E            STRB             R6, [R1]
  280 00000132         ;delay 6 us
  281 00000132 F7FF FF7D       BL               Delay_6us
  282 00000136 4978            LDR              R1, =E
  283 00000138 F04F 0300       MOV              R3, #0
  284 0000013C 700B            STRB             R3, [R1]
  285 0000013E         ;delay 6 us
  286 0000013E F7FF FF77       BL               Delay_6us
  287 00000142         
  288 00000142         ;OUT 4 least sig bits
  289 00000142 4B76            LDR              R3, =DATA
  290 00000144 4601            MOV              R1, R0
  291 00000146 F021 01F0       BIC              R1, #0xF0
  292 0000014A 7019            STRB             R1, [R3]
  293 0000014C         ;delay 6 us
  294 0000014C F7FF FF70       BL               Delay_6us
  295 00000150         ;Enable E to 1
  296 00000150 4971            LDR              R1, =E
  297 00000152 F04F 0620       MOV              R6, #0x20
  298 00000156 700E            STRB             R6, [R1]
  299 00000158         ;delay 6 us
  300 00000158 F7FF FF6A       BL               Delay_6us
  301 0000015C 496E            LDR              R1, =E
  302 0000015E F04F 0300       MOV              R3, #0
  303 00000162 700B            STRB             R3, [R1]
  304 00000164         ;delay 6 us
  305 00000164 F7FF FF64       BL               Delay_6us
  306 00000168         
  307 00000168         ;wait 90 us
  308 00000168 F7FF FFB1       BL               Delay_90uS
  309 0000016C E8BD 1FFE       POP              {R1-R12}
  310 00000170 BD00            POP              {PC}
  311 00000172         
  312 00000172         ;---------------------LCD_Clear---------------------
  313 00000172         ; clear the LCD display, send cursor to home
  314 00000172         ; Input: none
  315 00000172         ; Outputs: none
  316 00000172         ; This is a public function
  317 00000172         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  318 00000172         LCD_Clear
  319 00000172 B500            PUSH             {LR}



ARM Macro Assembler    Page 7 


  320 00000174 B401            PUSH             {R0}
  321 00000176         
  322 00000176         ;outCsr(0x01)
  323 00000176 F04F 0001       MOV              R0, #0x01
  324 0000017A F7FF FF60       BL               outCsr
  325 0000017E         
  326 0000017E         ;WAIT 1.64 MS
  327 0000017E F7FF FFB2       BL               Delay
  328 00000182 F000 F80A       BL               Delay_640uS
  329 00000186         
  330 00000186         ;outCsr(0x02)
  331 00000186 F04F 0002       MOV              R0, #0x02
  332 0000018A F7FF FF58       BL               outCsr
  333 0000018E         
  334 0000018E         ;WAIT 1.64 MS
  335 0000018E F7FF FFAA       BL               Delay
  336 00000192 F000 F802       BL               Delay_640uS
  337 00000196         
  338 00000196 BC01            POP              {R0}
  339 00000198 BD00            POP              {PC}
  340 0000019A         
  341 0000019A         
  342 0000019A         ;-----------Delay_640uS-----------------
  343 0000019A         ;Delay function spends 640 us doing "nothing"
  344 0000019A         ;Input: None
  345 0000019A         ;Output: spends 640 us of time
  346 0000019A         ;Modifies: R0
  347 0000019A F44F 50FA 
                       Delay_640uS
                               MOV              R0,#8000
  348 0000019E 1E40    wait5   SUBS             R0,R0,#0x01
  349 000001A0 D1FD            BNE              wait5
  350 000001A2 4770            BX               LR
  351 000001A4         
  352 000001A4         ;-----------------------LCD_GoTo-----------------------
  353 000001A4         ; Move cursor (set display address) 
  354 000001A4         ; Input: R0 is display address (DDaddr) is 0 to 7, or 0x
                       40 to 0x47 
  355 000001A4         ; Output: none
  356 000001A4         ; errors: it will check for legal address
  357 000001A4         ;  0) save any registers that will be destroyed by pushi
                       ng on the stack
  358 000001A4         ;  1) go to step 3 if DDaddr is 0x08 to 0x3F or 0x48 to 
                       0xFFFFFFFF
  359 000001A4         ;  2) outCsr(DDaddr+0x80)     
  360 000001A4         ;  3) restore the registers by pulling off the stack
  361 000001A4         ; This is a public function
  362 000001A4         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  363 000001A4         LCD_GoTo
  364 000001A4 B500            PUSH             {LR}
  365 000001A6 E92D 1FFE       PUSH             {R1-R12}
  366 000001AA         
  367 000001AA F04F 0107       MOV              R1,#0x07
  368 000001AE 4288            CMP              R0,R1
  369 000001B0 D907            BLS              YES
  370 000001B2 F04F 0147       MOV              R1,#0x47
  371 000001B6 4288            CMP              R0,R1
  372 000001B8 D807            BHI              EXIT



ARM Macro Assembler    Page 8 


  373 000001BA F04F 013F       MOV              R1,#0x3F
  374 000001BE 4288            CMP              R0,R1
  375 000001C0 D903            BLS              EXIT
  376 000001C2         
  377 000001C2 F100 0080 
                       YES     ADD              R0, R0, #0X80
  378 000001C6 F7FF FF3A       BL               outCsr
  379 000001CA         
  380 000001CA E8BD 1FFE 
                       EXIT    POP              {R1-R12}
  381 000001CE BD00            POP              {PC}
  382 000001D0         
  383 000001D0         ; ---------------------LCD_OutString-------------
  384 000001D0         ; Output character string to LCD display, terminated by 
                       a NULL(0)
  385 000001D0         ; Inputs:  R0 (call by reference) points to a string of 
                       ASCII characters 
  386 000001D0         ; Outputs: none
  387 000001D0         ; This is a public function
  388 000001D0         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  389 000001D0         LCD_OutString
  390 000001D0 B500            PUSH             {LR}
  391 000001D2 B440            PUSH             {R6}
  392 000001D4 4606            MOV              R6, R0
  393 000001D6 6830    LOOPO   LDR              R0, [R6]
  394 000001D8 F106 0601       ADD              R6, R6, #1
  395 000001DC 1C00            ADDS             R0, R0, #0
  396 000001DE D002            BEQ              ENDO
  397 000001E0 F7FF FFFE       BL               LCD_OutChar
  398 000001E4 E7F7            B                LOOPO
  399 000001E6 BC40    ENDO    POP              {R6}
  400 000001E8 BD00            POP              {PC}
  401 000001EA         
  402 000001EA         
  403 000001EA         
  404 000001EA         ;-----------------------LCD_OutDec----------------------
                       -
  405 000001EA         ; Output a 32-bit number in unsigned decimal format
  406 000001EA         ; Input: R0 (call by value) 32-bit unsigned number 
  407 000001EA         ; Output: none
  408 000001EA         ; This is a public function
  409 000001EA         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  410 000001EA         LCD_OutDec
  411 000001EA         
  412 000001EA 00000000 
                       N       EQU              0
  413 000001EA         
  414 000001EA B500            PUSH             {LR}
  415 000001EC E92D 1FFE       PUSH             {R1-R12}
  416 000001F0         ;Allocate local Variables
  417 000001F0 B081            SUB              SP, SP, #4
  418 000001F2 9000            STR              R0, [SP, #N]
  419 000001F4         
  420 000001F4         ;BODY
  421 000001F4 F04F 010A       MOV              R1, #10
  422 000001F8 F04F 0300       MOV              R3, #0      ;COUNTER
  423 000001FC 4684            MOV              R12, R0



ARM Macro Assembler    Page 9 


  424 000001FE 4288    LOOPD   CMP              R0, R1
  425 00000200 DB0C            BLT              SKIP
  426 00000202         ;N = N%10
  427 00000202 FBBC F0F1       UDIV             R0, R12, R1
  428 00000206 FB00 F201       MUL              R2, R0, R1
  429 0000020A EBAC 0002       SUB              R0, R12, R2
  430 0000020E B401            PUSH             {R0}
  431 00000210 F103 0301       ADD              R3, #1
  432 00000214 FBBC FCF1       UDIV             R12, R12, R1
  433 00000218 4660            MOV              R0, R12
  434 0000021A E7F0            B                LOOPD
  435 0000021C         
  436 0000021C         ;OUT NUMBERS
  437 0000021C F100 0030 
                       SKIP    ADD              R0, R0, #0x30
  438 00000220 F7FF FFFE       BL               LCD_OutChar
  439 00000224 1C1B            ADDS             R3, R3, #0
  440 00000226 D003            BEQ              DONES
  441 00000228 F1A3 0301       SUB              R3, R3, #1
  442 0000022C BC01            POP              {R0}
  443 0000022E E7F5            B                SKIP
  444 00000230         
  445 00000230         
  446 00000230         DONES                                ;Deallocate local V
                                                            ariables
  447 00000230 B001            ADD              SP, SP, #4
  448 00000232 E8BD 1FFE       POP              {R1-R12}
  449 00000236 BD00            POP              {PC}
  450 00000238         
  451 00000238         
  452 00000238         ; -----------------------LCD _OutFix--------------------
                       --
  453 00000238         ; Output characters to LCD display in fixed-point format
                       
  454 00000238         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99 
  455 00000238         ; Inputs:  R0 is an unsigned 16-bit number
  456 00000238         ; Outputs: none
  457 00000238         ; E.g., R0=0,    then output "0.000 " 
  458 00000238         ;       R0=3,    then output "0.003 " 
  459 00000238         ;       R0=89,   then output "0.089 " 
  460 00000238         ;       R0=123,  then output "0.123 " 
  461 00000238         ;       R0=9999, then output "9.999 " 
  462 00000238         ;       R0>9999, then output "*.*** "
  463 00000238         ; This is a public function
  464 00000238         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  465 00000238         LCD_OutFix
  466 00000238         
  467 00000238 00000000 
                       num     EQU              0
  468 00000238 0000270F 
                       MAX     EQU              9999
  469 00000238 0000000A 
                       TEN     EQU              10
  470 00000238         
  471 00000238         ;Allocate local Variables
  472 00000238 B500            PUSH             {LR}
  473 0000023A E92D 1FFE       PUSH             {R1-R12}



ARM Macro Assembler    Page 10 


  474 0000023E B081            SUB              SP, SP, #4
  475 00000240 9000            STR              R0,[SP,#num]
  476 00000242 4607            MOV              R7, R0
  477 00000244         
  478 00000244         ;Check for max value
  479 00000244 F242 710F       MOV              R1, #MAX
  480 00000248 4288            CMP              R0,R1
  481 0000024A DD14            BLE              NEXT1
  482 0000024C F04F 002A       LDR              R0,='*'
  483 00000250 F7FF FFFE       BL               LCD_OutChar
  484 00000254 F04F 002E       LDR              R0,='.'
  485 00000258 F7FF FFFE       BL               LCD_OutChar
  486 0000025C F04F 002A       LDR              R0,='*'
  487 00000260 F7FF FFFE       BL               LCD_OutChar
  488 00000264 F7FF FFFE       BL               LCD_OutChar
  489 00000268 F7FF FFFE       BL               LCD_OutChar
  490 0000026C F04F 0020       LDR              R0,=' '
  491 00000270 F7FF FFFE       BL               LCD_OutChar
  492 00000274 E02F            B                GO_ON
  493 00000276         
  494 00000276         
  495 00000276         NEXT1
  496 00000276 F04F 010A       MOV              R1, #TEN
  497 0000027A F04F 0804       MOV              R8, #4
  498 0000027E         NEXT2
  499 0000027E 46BC            MOV              R12, R7
  500 00000280 F118 0800       ADDS             R8, R8, #0
  501 00000284 D00B            BEQ              DONEDY
  502 00000286 FBBC F0F1       UDIV             R0, R12, R1
  503 0000028A FB00 F201       MUL              R2, R0, R1
  504 0000028E EBAC 0002       SUB              R0, R12, R2
  505 00000292 B401            PUSH             {R0}
  506 00000294 FBB7 F7F1       UDIV             R7, R7, R1
  507 00000298 F1A8 0801       SUB              R8, R8, #1
  508 0000029C E7EF            B                NEXT2
  509 0000029E         
  510 0000029E BC01    DONEDY  POP              {R0}
  511 000002A0 F100 0030       ADD              R0, R0, #0x30
  512 000002A4 F7FF FFFE       BL               LCD_OutChar
  513 000002A8 F04F 002E       LDR              R0,='.'
  514 000002AC F7FF FFFE       BL               LCD_OutChar
  515 000002B0 BC01            POP              {R0}
  516 000002B2 F100 0030       ADD              R0, R0, #0x30
  517 000002B6 F7FF FFFE       BL               LCD_OutChar
  518 000002BA BC01            POP              {R0}
  519 000002BC F100 0030       ADD              R0, R0, #0x30
  520 000002C0 F7FF FFFE       BL               LCD_OutChar
  521 000002C4 BC01            POP              {R0}
  522 000002C6 F100 0030       ADD              R0, R0, #0x30
  523 000002CA F7FF FFFE       BL               LCD_OutChar
  524 000002CE         
  525 000002CE F04F 0020       LDR              R0,=' '
  526 000002D2 F7FF FFFE       BL               LCD_OutChar
  527 000002D6         
  528 000002D6         ;Deallocate local Variables
  529 000002D6 B001    GO_ON   ADD              SP, SP, #4
  530 000002D8         
  531 000002D8 E8BD 1FFE       POP{R1-R12}
  532 000002DC BD00            POP{PC}



ARM Macro Assembler    Page 11 


  533 000002DE         
  534 000002DE         
  535 000002DE         
  536 000002DE         ; -----------------------PortF_Init---------------------
                       -
  537 000002DE         ; Initiates port F
  538 000002DE         ; Input: None
  539 000002DE         ; Output: None
  540 000002DE         ; Modifies R0, R1
  541 000002DE         PortF_Init
  542 000002DE B500            PUSH             {LR}
  543 000002E0 B403            PUSH             {R0, R1}
  544 000002E2         ; activates clock for port F
  545 000002E2 4911            LDR              R1, =SYSCTL_RCGC2_R ; R1 = &SYS
                                                            CTL_RCGC2_R
  546 000002E4 6808            LDR              R0, [R1]    ; R0 = [R1]
  547 000002E6 F040 0020       ORR              R0, R0, #SYSCTL_RCGC2_GPIOF ; R
                                                            0 = R0|SYSCTL_RCGC2
                                                            _GPIOF
  548 000002EA 6008            STR              R0, [R1]
  549 000002EC BF00            NOP
  550 000002EE BF00            NOP
  551 000002F0         ; set direction register
  552 000002F0 490E            LDR              R1, =GPIO_PORTF_DIR_R ; R1 = &G
                                                            PIO_PORTF_DIR_R
  553 000002F2 6808            LDR              R0, [R1]    ; R0 = [R1]
  554 000002F4 F040 003F       ORR              R0, R0, #0x3F ; R0 = R0|0x3F (m
                                                            ake PB0-5 output)
  555 000002F8 6008            STR              R0, [R1]    ; [R1] = R0
  556 000002FA         ; regular port function
  557 000002FA 490D            LDR              R1, =GPIO_PORTF_AFSEL_R ; R1 = 
                                                            &GPIO_PORTF_AFSEL_R
                                                            
  558 000002FC 6808            LDR              R0, [R1]    ; R0 = [R1]
  559 000002FE F020 003F       BIC              R0, R0, #0x3F ; R0 = &~0x3F (di
                                                            sable alt function 
                                                            on P0-5)
  560 00000302 6008            STR              R0, [R1]    ; [R1] = R0
  561 00000304         ; enable digital port
  562 00000304 490B            LDR              R1, =GPIO_PORTF_DEN_R ; R1 = &G
                                                            PIO_PORTF_DEN_R
  563 00000306 6808            LDR              R0, [R1]    ; R0 = [R1]
  564 00000308 F040 003F       ORR              R0, R0, #0x3F ; enable P0-5
  565 0000030C 6008            STR              R0, [R1]
  566 0000030E BC03            POP              {R0, R1}
  567 00000310 BD00            POP              {PC}
  568 00000312         
  569 00000312 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  570 00000314                 END                          ; end of file
              40025040 
              40025080 
              4002503C 
              00000000 
              00000000 
              400FE108 
              40025400 
              40025420 



ARM Macro Assembler    Page 12 


              4002551C 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=LCD.d -o
LCD.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Lumi
nary --predefine="__MICROLIB SETA 1" --list=LCD.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 46 in file LCD.s
   Uses
      None
Comment: .text unused
DONEDY 0000029E

Symbol: DONEDY
   Definitions
      At line 510 in file LCD.s
   Uses
      At line 501 in file LCD.s
Comment: DONEDY used once
DONES 00000230

Symbol: DONES
   Definitions
      At line 446 in file LCD.s
   Uses
      At line 440 in file LCD.s
Comment: DONES used once
Delay 000000E6

Symbol: Delay
   Definitions
      At line 226 in file LCD.s
   Uses
      At line 242 in file LCD.s
      At line 327 in file LCD.s
      At line 335 in file LCD.s

Delay_100uS 000000DC

Symbol: Delay_100uS
   Definitions
      At line 214 in file LCD.s
   Uses
      At line 166 in file LCD.s
      At line 170 in file LCD.s
      At line 174 in file LCD.s

Delay_640uS 0000019A

Symbol: Delay_640uS
   Definitions
      At line 347 in file LCD.s
   Uses
      At line 328 in file LCD.s
      At line 336 in file LCD.s

Delay_6us 00000030

Symbol: Delay_6us
   Definitions
      At line 90 in file LCD.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 71 in file LCD.s
      At line 76 in file LCD.s
      At line 80 in file LCD.s
      At line 275 in file LCD.s
      At line 281 in file LCD.s
      At line 286 in file LCD.s
      At line 294 in file LCD.s
      At line 300 in file LCD.s
      At line 305 in file LCD.s

Delay_90uS 000000CE

Symbol: Delay_90uS
   Definitions
      At line 200 in file LCD.s
   Uses
      At line 139 in file LCD.s
      At line 308 in file LCD.s

Delay_TIME 000000F0

Symbol: Delay_TIME
   Definitions
      At line 238 in file LCD.s
   Uses
      At line 154 in file LCD.s
      At line 162 in file LCD.s

ENDO 000001E6

Symbol: ENDO
   Definitions
      At line 399 in file LCD.s
   Uses
      At line 396 in file LCD.s
Comment: ENDO used once
EXIT 000001CA

Symbol: EXIT
   Definitions
      At line 380 in file LCD.s
   Uses
      At line 372 in file LCD.s
      At line 375 in file LCD.s

GO_ON 000002D6

Symbol: GO_ON
   Definitions
      At line 529 in file LCD.s
   Uses
      At line 492 in file LCD.s
Comment: GO_ON used once
LCD_Clear 00000172

Symbol: LCD_Clear
   Definitions
      At line 318 in file LCD.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 28 in file LCD.s
Comment: LCD_Clear used once
LCD_GoTo 000001A4

Symbol: LCD_GoTo
   Definitions
      At line 363 in file LCD.s
   Uses
      At line 30 in file LCD.s
Comment: LCD_GoTo used once
LCD_Open 00000062

Symbol: LCD_Open
   Definitions
      At line 149 in file LCD.s
   Uses
      At line 27 in file LCD.s
Comment: LCD_Open used once
LCD_OutChar 00000106

Symbol: LCD_OutChar
   Definitions
      At line 258 in file LCD.s
   Uses
      At line 29 in file LCD.s
      At line 32 in file LCD.s
      At line 397 in file LCD.s
      At line 438 in file LCD.s
      At line 483 in file LCD.s
      At line 485 in file LCD.s
      At line 487 in file LCD.s
      At line 488 in file LCD.s
      At line 489 in file LCD.s
      At line 491 in file LCD.s
      At line 512 in file LCD.s
      At line 514 in file LCD.s
      At line 517 in file LCD.s
      At line 520 in file LCD.s
      At line 523 in file LCD.s
      At line 526 in file LCD.s

LCD_OutDec 000001EA

Symbol: LCD_OutDec
   Definitions
      At line 410 in file LCD.s
   Uses
      At line 33 in file LCD.s
Comment: LCD_OutDec used once
LCD_OutFix 00000238

Symbol: LCD_OutFix
   Definitions
      At line 465 in file LCD.s
   Uses
      At line 34 in file LCD.s
Comment: LCD_OutFix used once
LCD_OutString 000001D0




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: LCD_OutString
   Definitions
      At line 389 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: LCD_OutString used once
LOOPD 000001FE

Symbol: LOOPD
   Definitions
      At line 424 in file LCD.s
   Uses
      At line 434 in file LCD.s
Comment: LOOPD used once
LOOPO 000001D6

Symbol: LOOPO
   Definitions
      At line 393 in file LCD.s
   Uses
      At line 398 in file LCD.s
Comment: LOOPO used once
NEXT1 00000276

Symbol: NEXT1
   Definitions
      At line 495 in file LCD.s
   Uses
      At line 481 in file LCD.s
Comment: NEXT1 used once
NEXT2 0000027E

Symbol: NEXT2
   Definitions
      At line 498 in file LCD.s
   Uses
      At line 508 in file LCD.s
Comment: NEXT2 used once
PortF_Init 000002DE

Symbol: PortF_Init
   Definitions
      At line 541 in file LCD.s
   Uses
      At line 156 in file LCD.s
Comment: PortF_Init used once
SKIP 0000021C

Symbol: SKIP
   Definitions
      At line 437 in file LCD.s
   Uses
      At line 425 in file LCD.s
      At line 443 in file LCD.s

YES 000001C2

Symbol: YES
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 377 in file LCD.s
   Uses
      At line 369 in file LCD.s
Comment: YES used once
loop_d 000000F6

Symbol: loop_d
   Definitions
      At line 242 in file LCD.s
   Uses
      At line 244 in file LCD.s
Comment: loop_d used once
outCsr 0000003E

Symbol: outCsr
   Definitions
      At line 127 in file LCD.s
   Uses
      At line 178 in file LCD.s
      At line 181 in file LCD.s
      At line 184 in file LCD.s
      At line 187 in file LCD.s
      At line 324 in file LCD.s
      At line 332 in file LCD.s
      At line 378 in file LCD.s

outCsrNibble 00000000

Symbol: outCsrNibble
   Definitions
      At line 57 in file LCD.s
   Uses
      At line 133 in file LCD.s
      At line 137 in file LCD.s
      At line 159 in file LCD.s
      At line 165 in file LCD.s
      At line 169 in file LCD.s
      At line 173 in file LCD.s

wait 000000EA

Symbol: wait
   Definitions
      At line 227 in file LCD.s
   Uses
      At line 228 in file LCD.s
Comment: wait used once
wait2 000000E0

Symbol: wait2
   Definitions
      At line 215 in file LCD.s
   Uses
      At line 216 in file LCD.s
Comment: wait2 used once
wait3 000000D4

Symbol: wait3
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 202 in file LCD.s
   Uses
      At line 203 in file LCD.s
Comment: wait3 used once
wait4 00000036

Symbol: wait4
   Definitions
      At line 92 in file LCD.s
   Uses
      At line 93 in file LCD.s
Comment: wait4 used once
wait5 0000019E

Symbol: wait5
   Definitions
      At line 348 in file LCD.s
   Uses
      At line 349 in file LCD.s
Comment: wait5 used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DATA 4002503C

Symbol: DATA
   Definitions
      At line 40 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 270 in file LCD.s
      At line 289 in file LCD.s

E 40025080

Symbol: E
   Definitions
      At line 38 in file LCD.s
   Uses
      At line 64 in file LCD.s
      At line 265 in file LCD.s
      At line 277 in file LCD.s
      At line 282 in file LCD.s
      At line 296 in file LCD.s
      At line 301 in file LCD.s

GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 43 in file LCD.s
   Uses
      At line 557 in file LCD.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 40025000

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 41 in file LCD.s
   Uses
      At line 40 in file LCD.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 44 in file LCD.s
   Uses
      At line 562 in file LCD.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 42 in file LCD.s
   Uses
      At line 552 in file LCD.s
Comment: GPIO_PORTF_DIR_R used once
MAX 0000270F

Symbol: MAX
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 468 in file LCD.s
   Uses
      At line 479 in file LCD.s
Comment: MAX used once
N 00000000

Symbol: N
   Definitions
      At line 412 in file LCD.s
   Uses
      At line 418 in file LCD.s
Comment: N used once
RS 40025040

Symbol: RS
   Definitions
      At line 39 in file LCD.s
   Uses
      At line 61 in file LCD.s
      At line 262 in file LCD.s

SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 36 in file LCD.s
   Uses
      At line 547 in file LCD.s
Comment: SYSCTL_RCGC2_GPIOF used once
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 35 in file LCD.s
   Uses
      At line 545 in file LCD.s
Comment: SYSCTL_RCGC2_R used once
TEN 0000000A

Symbol: TEN
   Definitions
      At line 469 in file LCD.s
   Uses
      At line 496 in file LCD.s
Comment: TEN used once
num 00000000

Symbol: num
   Definitions
      At line 467 in file LCD.s
   Uses
      At line 475 in file LCD.s
Comment: num used once
13 symbols
380 symbols in table
